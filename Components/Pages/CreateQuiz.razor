@page "/createquiz"

@inject NavigationManager navManager
@inject QuazeDbContext db
@rendermode InteractiveServer

<div class="container">
    @if (quiz is null)
    {
        <p>Loading...</p>
    }
    else
    {
        <div class="form-group w-50 m-auto">
            <div class="form-group mb-5">
                @* Kellenek majd Labelek Bootstrapből*@
                <InputText @bind-Value="quiz.Title" @onfocusout="SaveQuiz" class="form-control form-control-lg mb-2" placeholder="Enter title..." />
                <InputTextArea @bind-Value="quiz.Description" @onfocusout="SaveQuiz" class="form-control" />
            </div>
            @foreach (var question in quiz.Questions)
            {
                <div class="container w-75 mb-4">
                    <InputText @bind-Value="question.Title" @onfocusout="SaveQuiz" class="form-control mb-2" />
                    <InputTextArea @bind-Value="question.Description" @onfocusout="SaveQuiz" class="form-control" />
                    <InputNumber @bind-Value="question.TimeLimit" @onfocusout="SaveQuiz" class="form-control" />
                    @if (question.QuestionType == Question.Type.Choice)
                    {
                        foreach (var choice in question.Choices)
                        {
                            //<InputCheckbox @bind-Value=""
                        }
                    }
                    else
                    {
                        
                    }
                </div>
            }
            <button @onclick="AddQ" type="button" class="btn btn-primary mt-3">Add question</button>
        </div>
    }
</div>

@code {
    [Parameter]
    public int? QuizId { get; set; }

    private Models.Quiz? quiz { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (QuizId is null)
        {
            quiz = new Models.Quiz();
            db.Add(quiz);
            await db.SaveChangesAsync();
        }
        else
        {
            quiz = await db.Quizes.FindAsync(QuizId);
        }
    }

    private async void AddChoiceOption(int index)
    {
        db.Update(quiz);
        await db.SaveChangesAsync();
    }

    private async void AddQ()
    {
        quiz.Questions.Add(new Question() { QuestionType = Question.Type.Choice });
        db.Update(quiz);
        await db.SaveChangesAsync();
    }

    private void SaveQuiz()
    {
        db.Update(quiz);
        db.SaveChanges();
    }
}
